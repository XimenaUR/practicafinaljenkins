pipeline {
    agent //El bloque donde se especifica donde ejecutará el pipeline
        [ Ejemplo
            agent any
            agent label
            agent docker
        ]

    environment {
        MI_VARIABLE_DE_ENTORNO = 'Valor de mi variable de entorno'
        NODE_ENV = 'production'
    }

    stages // Aquí se agrupan los diferentes pasos que se deben seguir en el pipeline
        stage //Representa un pasos dentro del pipeline
            steps // Representa los steps que deben ser ejecutados en cada Stage
        [ Ejemplo
            stages {
                stage('test'){
                    steps {
                        echo 'Testeando aplicación...'
                        sh 'npm run test'
                    }
                }
            }
        ]
    
    post //Indica que hacer en la finalización de la ejecución
        [ Ejemplo  
            post {
                success: {
                    echo 'Mensaje de aviso'
                }
                failure {
                    ...
                }
                always { 

                }
            } 
        ]
}

 //stage ('Build image') {
        //steps {
          //echo 'Building Docker image'
          //sh 'docker build -t practicafinaljenkins: 1.0.0 .'
        //}
      //}

      //stage ('Push Docker image to Duckerhub') {
        //steps {
          //echo 'Pushing Docker image to DockerHub'
          //sh 'echo $DH_TOKEN_PSW | docker login --username =$DH_TOKEN_USR --password-stdin'
          //sh 'docker tag practicafinaljenkins mydockerhubusername/practicafinaljenkins: 1.0.0'
          //sh 'docker push mydockehubusername/pracicafinaljenkins:1.0.0'
        //}
      //}

      stage ('Install fly.io') {
        steps {
          echo 'Installing Fly.io'
          //withCredentials([string(credentialsId: 'FLY_API_TOKEN', variable: 'FLY_TOKEN')]) {
          sh '''
            curl -L https://fly.io/install.sh | sh
            export FLYCTL_INSTALL="/var/jenkins_home/.fly"
            export PATH="$FLYCTL_INSTALL/bin:$PATH"
          '''
        }
      }

      stage ('Deploy to Fly.io') {
        steps {
          echo 'Deploying to fly.io'
          sh 'flyctl auth token $FLY_API_TOKEN'
          sh '/usr/bin/flyctl deploy --app practicafinaljenkins --remote-only'          
        }
  
      }
  }
}